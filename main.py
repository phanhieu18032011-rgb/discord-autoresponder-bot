import discord
from discord.ext import commands
from discord import app_commands
from flask import Flask
from threading import Thread
import random
import os

# ==== Flask ƒë·ªÉ gi·ªØ bot s·ªëng tr√™n Render ====
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ Bot is running!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# ==== C·∫•u h√¨nh bot ====
TOKEN = os.getenv("TOKEN") or "YOUR_TOKEN_HERE"
PREFIX = "!"

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=PREFIX, intents=intents)
tree = bot.tree

# ==== Khi bot online ====
@bot.event
async def on_ready():
    print(f"ü§ñ Bot ƒë√£ ƒëƒÉng nh·∫≠p: {bot.user}")
    try:
        await tree.sync()
        print("‚úÖ Slash commands ƒë√£ sync to√†n c·∫ßu.")
    except Exception as e:
        print(f"L·ªói sync: {e}")

# ==== Prefix Commands ====
@bot.command()
async def ping(ctx):
    await ctx.send(f"Pong! {round(bot.latency * 1000)}ms")

@bot.command()
async def say(ctx, *, text):
    await ctx.send(text)

@bot.command()
async def clear(ctx, amount: int = 5):
    await ctx.channel.purge(limit=amount + 1)
    await ctx.send(f"üßπ ƒê√£ xo√° {amount} tin nh·∫Øn.", delete_after=3)

# ==== 5 Mini Games ====

# 1Ô∏è‚É£ ƒêo√°n s·ªë
@bot.command()
async def ƒëo√°ns·ªë(ctx):
    number = random.randint(1, 10)
    await ctx.send("üéØ T√¥i ƒë√£ nghƒ© 1 s·ªë t·ª´ 1‚Äì10, ƒëo√°n ƒëi!")

    def check(msg):
        return msg.author == ctx.author and msg.channel == ctx.channel

    msg = await bot.wait_for("message", check=check)
    if msg.content.isdigit() and int(msg.content) == number:
        await ctx.send("‚úÖ Ch√≠nh x√°c!")
    else:
        await ctx.send(f"‚ùå Sai r·ªìi, s·ªë ƒë√∫ng l√† {number}.")

# 2Ô∏è‚É£ O·∫≥n t√π t√¨
@bot.command()
async def o·∫≥nt√πt√¨(ctx, ch·ªçn: str):
    ch·ªçn = ch·ªçn.lower()
    bot_ch·ªçn = random.choice(["k√©o", "b√∫a", "bao"])
    if ch·ªçn == bot_ch·ªçn:
        kq = "‚öñÔ∏è Ho√†!"
    elif (ch·ªçn, bot_ch·ªçn) in [("k√©o","bao"),("b√∫a","k√©o"),("bao","b√∫a")]:
        kq = "üèÜ B·∫°n th·∫Øng!"
    else:
        kq = "üò¢ B·∫°n thua!"
    await ctx.send(f"ü§ñ T√¥i ch·ªçn **{bot_ch·ªçn}** ‚Äî {kq}")

# 3Ô∏è‚É£ X√∫c x·∫Øc
@bot.command()
async def x√∫cx·∫Øc(ctx):
    await ctx.send(f"üé≤ K·∫øt qu·∫£: {random.randint(1,6)}")

# 4Ô∏è‚É£ ƒêo√°n ch·ªØ
@bot.command()
async def ƒëo√°nch·ªØ(ctx):
    words = ["python", "discord", "render", "github"]
    word = random.choice(words)
    hidden = "_" * len(word)
    await ctx.send(f"T·ª´ c·∫ßn ƒëo√°n: `{hidden}` (g·ª£i √Ω: {len(word)} ch·ªØ)")

# 5Ô∏è‚É£ Blackjack
@bot.command()
async def blackjack(ctx):
    user = random.randint(15, 25)
    botnum = random.randint(15, 25)
    if user > 21:
        result = "B·∫°n qu√° 21, thua!"
    elif botnum > 21 or user > botnum:
        result = "B·∫°n th·∫Øng!"
    elif user == botnum:
        result = "Ho√†!"
    else:
        result = "Bot th·∫Øng!"
    await ctx.send(f"üÉè B·∫°n: {user} | Bot: {botnum}\n{result}")

# ==== Slash Commands ====
@tree.command(name="ping", description="Ki·ªÉm tra ƒë·ªô tr·ªÖ bot")
async def ping_slash(interaction: discord.Interaction):
    await interaction.response.send_message(f"Pong! {round(bot.latency * 1000)}ms")

@tree.command(name="say", description="Bot l·∫∑p l·∫°i l·ªùi b·∫°n")
async def say_slash(interaction: discord.Interaction, text: str):
    await interaction.response.send_message(text)

# ==== Ch·∫°y bot ====
keep_alive()
bot.run(TOKEN)

